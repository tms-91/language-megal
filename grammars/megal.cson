fileTypes: [
  "megal"
]
name: "MegaL"
scopeName: "source.megal"
patterns: [
  {
    match: "^\\s*(module)\\s+([\\w\\.]+)"
    captures:
      "1":
        name: "keyword.control.megal"
    name: "meta.relation.megal"
    comment: "MegaL module specification"
  }
  {
    begin: "^\\s*(import)\\s+([\\w\\.]+)\\s+(where)\\s+{"
    end: "^\\s*}"
    beginCaptures:
      "1":
        name: "keyword.control.megal"
      "3":
        name: "keyword.control.megal"
    patterns: [
      {
        begin: "^\\s+\\["
        end: "\\],?"
        patterns: [
          {
            match: "(\\??[\\w\\.]+)\\s+/\\s+(\\??[\\w\\.]+),?"
            captures:
              "1":
                name: "entity.name.type.megal"
              "2":
                name: "entity.name.type.megal"
            name: "meta.relation.megal"
          }
        ]
        name: "meta.relation.megal"
      }
    ]
    name: "meta.relation.megal"
    comment: "MegaL import with substitution"
  }
  {
    match: "^\\s*(import)\\s+([\\w\\.]+)"
    captures:
      "1":
        name: "keyword.control.megal"
    name: "meta.relation.megal"
    comment: "MegaL import"
  }
  {
    begin: "\""
    end: "\""
    name: "string.quoted.double.megal"
    patterns: [
      {
        match: "\\\\\\\\."
        name: "constant.character.escape.megal"
      }
    ]
  }
  {
    begin: "/\\*"
    captures:
      "0":
        name: "punctuation.definition.comment.megal"
    end: "\\*/"
    name: "comment.block.megal"
  }
  {
    match: "//.*"
    name: "comment.line.megal"
  }
  {
    begin: "^\\s*(\\??[\\w\\.]+)\\s*(:|<)\\s*(\\??[\\w\\.]+)\\s*(;)\\r?\\n"
    end: "\\s+((\\^?\\w+)\\s+(\\??[\\w\\.]+)|(~?=)\\s+(\"[\\w\\-\\./\\?=&:%]*\"))\\s*(\\.)"
    beginCaptures:
      "1":
        name: "entity.name.type.megal"
      "2":
        name: "keyword.operator.assignment.megal"
      "3":
        name: "variable.other.megal"
      "4":
        name: "keyword.operator.other.megal"
    endCaptures:
      "2":
        name: "keyword.control.megal"
      "3":
        name: "variable.other.megal"
      "4":
        name: "keyword.operator.assignment.megal"
      "5":
        name: "string.quoted.double.megal"
      "6":
        name: "keyword.operator.other.megal"
    patterns: [
      {
        match: "^\\s+(\\^?\\w+)\\s+(\\??[\\w\\.]+)\\s*(;)"
        name: "meta.function.megal"
        captures:
          "1":
            name: "keyword.control.megal"
          "2":
            name: "variable.other.megal"
          "3":
            name: "keyword.operator.other.megal"
      }
      {
        match: "^\\s+(~?=)\\s+(\"[\\w\\-\\./\\?=&:%#_\\(\\)]*\")\\s*(;)"
        name: "meta.comment.block.megal"
        captures:
          "1":
            name: "keyword.operator.assignment.megal"
          "2":
            name: "string.quoted.double.megal"
          "3":
            name: "keyword.operator.other.megal"
      }
    ]
    name: "meta.relation.megal"
  }
  {
     captures:
      "1":
        name: "entity.name.function.megal"
      "2":
        name: "keyword.operator.assignment.megal"
      "3":
        name: "variable.other.megal"
      "5":
        name: "variable.other.megal"
      "6":
        name: "keyword.operator.assignment.megal"
      "7":
        name: "variable.other.megal"
      "8":
        name: "keyword.operator.other.megal"
    comment: "Matches MegaL functions"
    match: "^\\s*(\\??[\\w\\.]+)\\s+(:)\\s+(\\??[\\w\\.]+)(\\s*#\\s*(\\??[\\w\\.]+))*\\s+(\\->)\\s*(\\??[\\w\\.]+)\\s*(\\.)"
    name: "meta.relation.megal"
  }
  {
     captures:
      "1":
        name: "entity.name.type.megal"
      "2":
        name: "keyword.operator.assignment.megal"
      "3":
        name: "variable.other.megal"
      "4":
       name: "keyword.operator.other.megal"
    comment: "Matches Single Line Statements"
    match: "^\\s*(\\??[\\w\\.]+)\\s+(:|<)\\s+(\\??[\\w\\.]+)\\s*(\\.)"
    name: "meta.entity.megal"
  }
  {
     captures:
      "1":
        name: "entity.name.type.megal"
      "2":
        name: "keyword.operator.assignment.megal"
      "3":
        name: "string.quoted.double.megal"
      "4":
       name: "keyword.operator.other.megal"
    comment: "Matches Single Line Link Assignments"
    match: "^\\s*(\\??[\\w\\.]+)\\s*(~?=)\\s*(\"[\\w\\-\\./\\?=&:%#_\\(\\)]*\")\\s*(\\.)"
    name: "meta.entity.megal"
  }
  {
     captures:
      "1":
        name: "entity.name.type.megal"
      "2":
        name: "keyword.operator.assignment.megal"
      "3":
        name: "variable.other.megal"
      "5":
        name: "variable.other.megal"
      "6":
        name: "keyword.operator.other.megal"
    match: "^\\s*(\\??[\\w\\.]+)\\s*(<)\\s*(\\??[\\w\\.]+)\\s*(#\\s*(\\??[\\w\\.]+))*\\s*(\\.|;)"
    name: "meta.relation.megal"
  }
  {
    captures:
      "1":
        name: "entity.name.type.megal"
      "2":
        name: "keyword.control.megal"
      "3":
        name: "variable.other.megal"
      "4":
        name: "keyword.operator.other.megal"
    match: "^\\s*(\\??[\\w\\.]+)\\s+(\\w+)\\s+(\\??[\\w\\.]+)\\s*(\\.)"
    name: "meta.relation.megal"
  }
  {
     captures:
      "1":
        name: "entity.name.function.megal"
      "2":
        name: "entity.name.type.megal"
      "4":
        name: "entity.name.type.megal"
      "5":
        name: "keyword.operator.assignment.megal"
      "6":
        name: "entity.name.type.megal"
      "7":
        name: "keyword.operator.other.megal"
    comment: "Matches MegaL function applications"
    match: "^\\s*([\\w\\.]+)\\((\\??[\\w\\.]+)(\\s*,?\\s*(\\??[\\w\\.]+))*\\)\\s+(\\|\\->)\\s*(\\??[\\w\\.]+)\\s*(\\.)"
    name: "meta.relation.megal"
  }

]
